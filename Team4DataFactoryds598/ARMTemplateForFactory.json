{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Team4DataFactoryds598"
		},
		"AirPollution_RespiratoryHospitalizations_credential": {
			"type": "secureString",
			"metadata": "Secure string for 'credential' of 'AirPollution_RespiratoryHospitalizations'"
		},
		"AirpollutionSilver_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AirpollutionSilver'"
		},
		"HistoricalAirPollutionDatasink_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'HistoricalAirPollutionDatasink'"
		},
		"RawData_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'RawData'"
		},
		"RespiratorySilver_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'RespiratorySilver'"
		},
		"respiratorebronze_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'respiratorebronze'"
		},
		"AirPollution_RespiratoryHospitalizations_properties_typeProperties_username": {
			"type": "string",
			"defaultValue": "Harshgitbu"
		},
		"HistoricalAirPollution_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.openweathermap.org/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Air_Boston_Bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pulling Historical Air Pollution data for one year ",
				"activities": [
					{
						"name": "HistoricalAirPollution",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "data/2.5/air_pollution/history?lat=@{'42.3601'}&lon=@{'-71.0589'}&start=@{'1675232175'}&end=@{'1744152832'}&appid=@{'ce5de9911b73fac401ffac9abdc027cb'}"
							},
							{
								"name": "Destination",
								"value": "team4container/Bronze/HistoricalAirPollution/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HistoricalAirPollution",
								"type": "DatasetReference",
								"parameters": {
									"lat": "42.3601",
									"lon": "-71.0589",
									"appid": "ce5de9911b73fac401ffac9abdc027cb",
									"start": "1675232175",
									"end": "1744152832"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AirSinkBronze",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-08T18:59:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HistoricalAirPollution')]",
				"[concat(variables('factoryId'), '/datasets/AirSinkBronze')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Air_Boston_Silver')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Silver layer data\n",
				"activities": [
					{
						"name": "AirPollutionSilver",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PreProcessAirSilverBoston",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"AirPollutionSilver": {},
									"HistoricalAirPollutionSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PreProcessAirSilverBoston')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Air_Houston_Bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Pulling Historical Air Pollution data for one year ",
				"activities": [
					{
						"name": "HistoricalAirPollution",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HistoricalAirPollution",
								"type": "DatasetReference",
								"parameters": {
									"lat": "29.7601",
									"lon": "-95.3701",
									"appid": "ce5de9911b73fac401ffac9abdc027cb",
									"start": "1675232175",
									"end": "1744152832"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AirSinkBronze",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-04-08T18:59:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HistoricalAirPollution')]",
				"[concat(variables('factoryId'), '/datasets/AirSinkBronze')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Air_Houston_Silver')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Silver layer data\n",
				"activities": [
					{
						"name": "AirPollutionSilver",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PreProcessAirSilverHouston",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"AirPollutionSilver": {},
									"HistoricalAirPollutionSilver": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PreProcessAirSilverHouston')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Historical_Respiratory_Bronze')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RespiratoryHospitalization",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PreprocessRawRespiratoryDataBronze",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"RespiratoryHospitalizations": {},
									"RespiratoryHospitalization2years": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PreprocessRawRespiratoryDataBronze')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Respiratory_Boston_Silver')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Historical_Respiratory_Silver",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PreProcessRespiratorySilverBoston",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"RespiratoryHospitalizationSilver": {},
									"RespiratorySink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PreProcessRespiratorySilverBoston')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Respiratory_Houston_Silver')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Historical_Respiratory_Silver",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PreProcessRespiratorySilverHouston",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"RespiratoryHospitalizationSilver": {},
									"RespiratorySink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PreProcessRespiratorySilverHouston')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AirSinkBronze')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HistoricalAirPollutionDatasink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Bronze/HistoricalAirPollution",
						"container": "team4container"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HistoricalAirPollutionDatasink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AirSinkSilver')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AirpollutionSilver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Silver/HistoricalAirPollution",
						"container": "team4container"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AirpollutionSilver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HistoricalAirPollution')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HistoricalAirPollution",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"lat": {
						"type": "string",
						"defaultValue": "42.3601"
					},
					"lon": {
						"type": "string",
						"defaultValue": "-71.0589"
					},
					"appid": {
						"type": "string",
						"defaultValue": "ce5de9911b73fac401ffac9abdc027cb"
					},
					"start": {
						"type": "string",
						"defaultValue": "1675232175"
					},
					"end": {
						"type": "string",
						"defaultValue": "1744152832"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "data/2.5/air_pollution/history?lat=@{dataset().lat}&lon=@{dataset().lon}&start=@{dataset().start}&end=@{dataset().end}&appid=@{dataset().appid}",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HistoricalAirPollution')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RawHospData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Raw Respiratory data",
				"linkedServiceName": {
					"referenceName": "RawData",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "RawRespiratoryData.csv",
						"folderPath": "Bronze",
						"container": "team4container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "week_end",
						"type": "String"
					},
					{
						"name": "geography",
						"type": "String"
					},
					{
						"name": "county",
						"type": "String"
					},
					{
						"name": "percent_visits_combined",
						"type": "String"
					},
					{
						"name": "percent_visits_covid",
						"type": "String"
					},
					{
						"name": "percent_visits_influenza",
						"type": "String"
					},
					{
						"name": "percent_visits_rsv",
						"type": "String"
					},
					{
						"name": "percent_visits_smoothed_combined",
						"type": "String"
					},
					{
						"name": "percent_visits_smoothed_covid",
						"type": "String"
					},
					{
						"name": "percent_visits_smoothed_influenza",
						"type": "String"
					},
					{
						"name": "percent_visits_smoothed_rsv",
						"type": "String"
					},
					{
						"name": "ed_trends_covid",
						"type": "String"
					},
					{
						"name": "ed_trends_influenza",
						"type": "String"
					},
					{
						"name": "ed_trends_rsv",
						"type": "String"
					},
					{
						"name": "hsa",
						"type": "String"
					},
					{
						"name": "hsa_counties",
						"type": "String"
					},
					{
						"name": "hsa_nci_id",
						"type": "String"
					},
					{
						"name": "fips",
						"type": "String"
					},
					{
						"name": "trend_source",
						"type": "String"
					},
					{
						"name": "BuildNumber",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RawData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RespiratorySinkBronze')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "respiratorebronze",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Bronze/RespiratoryHospitalizations",
						"container": "team4container"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"week_end": {
							"type": "string"
						},
						"geography": {
							"type": "string"
						},
						"county": {
							"type": "string"
						},
						"percent_visits_combined": {
							"type": "string"
						},
						"percent_visits_covid": {
							"type": "string"
						},
						"percent_visits_influenza": {
							"type": "string"
						},
						"percent_visits_rsv": {
							"type": "string"
						},
						"percent_visits_smoothed_combined": {
							"type": "string"
						},
						"percent_visits_smoothed_covid": {
							"type": "string"
						},
						"percent_visits_smoothed_influenza": {
							"type": "string"
						},
						"percent_visits_smoothed_rsv": {
							"type": "string"
						},
						"ed_trends_covid": {
							"type": "string"
						},
						"ed_trends_influenza": {
							"type": "string"
						},
						"ed_trends_rsv": {
							"type": "string"
						},
						"hsa": {
							"type": "string"
						},
						"hsa_counties": {
							"type": "string"
						},
						"hsa_nci_id": {
							"type": "string"
						},
						"fips": {
							"type": "string"
						},
						"trend_source": {
							"type": "string"
						},
						"BuildNumber": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/respiratorebronze')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RespiratorySinkSilver')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RespiratorySilver",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "Silver/RespiratoryHospitalizations",
						"container": "team4container"
					},
					"compressionCodec": "none"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RespiratorySilver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AirPollution_RespiratoryHospitalizations')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "GitHub",
				"typeProperties": {
					"username": "[parameters('AirPollution_RespiratoryHospitalizations_properties_typeProperties_username')]",
					"credential": {
						"type": "SecureString",
						"value": "[parameters('AirPollution_RespiratoryHospitalizations_credential')]"
					},
					"encryptedCredential": "ew0KICAiVmVyc2lvbiI6ICIyMDE3LTExLTMwIiwNCiAgIlByb3RlY3Rpb25Nb2RlIjogIktleSIsDQogICJTZWNyZXRDb250ZW50VHlwZSI6ICJQbGFpbnRleHQiLA0KICAiQ3JlZGVudGlhbElkIjogIkRBVEFGQUNUT1JZQEMyRkRBOTA4LUVCNEEtNEFGRS1COUY1LTg1MzlDMUU0MTEyN181MGU4MGJiMS01MzMxLTRlNzEtOTg3Yi1hMTA5MWMyOTkxMWIiDQp9"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AirpollutionSilver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AirpollutionSilver_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HistoricalAirPollution')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HistoricalAirPollution_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HistoricalAirPollutionDatasink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('HistoricalAirPollutionDatasink_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RawData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('RawData_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RespiratorySilver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('RespiratorySilver_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/respiratorebronze')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('respiratorebronze_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PreProcessAirSilverBoston')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "getting data ready for silver for airpollution",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AirSinkBronze",
								"type": "DatasetReference"
							},
							"name": "AirPollutionSilver"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AirSinkSilver",
								"type": "DatasetReference"
							},
							"name": "HistoricalAirPollutionSilver"
						}
					],
					"transformations": [
						{
							"name": "flatten"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "drop"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          coord as (lat as double, lon as double),",
						"          list as (components as (co as double, nh3 as double, no as double, no2 as double, o3 as double, pm10 as double, pm2_5 as double, so2 as double), dt as integer, main as (aqi as short))[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine',",
						"     wildcardPaths:['Bronze/HistoricalAirPollution/data/2.5/air_pollution/history*'],",
						"     partitionBy('hash', 1)) ~> AirPollutionSilver",
						"AirPollutionSilver foldDown(unroll(list, list),",
						"     mapColumn(",
						"          lat = coord.lat,",
						"          lon = coord.lon,",
						"          co = list.components.co,",
						"          nh3 = list.components.nh3,",
						"          no = list.components.no,",
						"          no2 = list.components.no2,",
						"          o3 = list.components.o3,",
						"          pm10 = list.components.pm10,",
						"          pm2_5 = list.components.pm2_5,",
						"          so2 = list.components.so2,",
						"          timestamp = list.dt,",
						"          aqi = list.main.aqi",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten",
						"filter1 derive(Location = 'Boston',",
						"          id = concat('Boston', toString(timestamp)),",
						"          co = toString(round(co, 2), '0.00'),",
						"          nh3 = toString(round(nh3, 2), '0.00'),",
						"          no = toString(round(no, 2), '0.00'),",
						"          no2 = toString(round(no2, 2), '0.00'),",
						"          o3 = toString(round(o3, 2), '0.00'),",
						"          pm10 = toString(round(pm10, 2), '0.00'),",
						"          pm2_5 = toString(round(pm2_5, 2), '0.00'),",
						"          so2 = toString(round(so2, 2), '0.00'),",
						"          aqi = toInteger(aqi),",
						"          date_time = toTimestamp(toLong(timestamp) * 1000L)) ~> derivedColumn1",
						"derivedColumn1 select(mapColumn(",
						"          co,",
						"          nh3,",
						"          no,",
						"          no2,",
						"          o3,",
						"          pm10,",
						"          pm2_5,",
						"          so2,",
						"          aqi,",
						"          Location,",
						"          id,",
						"          date_time",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> drop",
						"flatten filter(lat == 42.3601) ~> filter1",
						"drop sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['HistoricalAirPollutionBoston.parquet'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> HistoricalAirPollutionSilver"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AirSinkBronze')]",
				"[concat(variables('factoryId'), '/datasets/AirSinkSilver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PreProcessAirSilverHouston')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "getting data ready for silver for airpollution",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AirSinkBronze",
								"type": "DatasetReference"
							},
							"name": "AirPollutionSilver"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AirSinkSilver",
								"type": "DatasetReference"
							},
							"name": "HistoricalAirPollutionSilver"
						}
					],
					"transformations": [
						{
							"name": "flatten"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "drop"
						},
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          coord as (lat as double, lon as double),",
						"          list as (components as (co as double, nh3 as double, no as double, no2 as double, o3 as double, pm10 as double, pm2_5 as double, so2 as double), dt as integer, main as (aqi as short))[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine',",
						"     wildcardPaths:['Bronze/HistoricalAirPollution/data/2.5/air_pollution/history*'],",
						"     partitionBy('hash', 1)) ~> AirPollutionSilver",
						"AirPollutionSilver foldDown(unroll(list, list),",
						"     mapColumn(",
						"          lat = coord.lat,",
						"          lon = coord.lon,",
						"          co = list.components.co,",
						"          nh3 = list.components.nh3,",
						"          no = list.components.no,",
						"          no2 = list.components.no2,",
						"          o3 = list.components.o3,",
						"          pm10 = list.components.pm10,",
						"          pm2_5 = list.components.pm2_5,",
						"          so2 = list.components.so2,",
						"          timestamp = list.dt,",
						"          aqi = list.main.aqi",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten",
						"filter1 derive(Location = 'Houston',",
						"          id = concat('Houston', toString(timestamp)),",
						"          co = toString(round(co, 2), '0.00'),",
						"          nh3 = toString(round(nh3, 2), '0.00'),",
						"          no = toString(round(no, 2), '0.00'),",
						"          no2 = toString(round(no2, 2), '0.00'),",
						"          o3 = toString(round(o3, 2), '0.00'),",
						"          pm10 = toString(round(pm10, 2), '0.00'),",
						"          pm2_5 = toString(round(pm2_5, 2), '0.00'),",
						"          so2 = toString(round(so2, 2), '0.00'),",
						"          date_time = toTimestamp(toLong(timestamp) * 1000L),",
						"          aqi = toInteger(aqi)) ~> derivedColumn1",
						"derivedColumn1 select(mapColumn(",
						"          co,",
						"          nh3,",
						"          no,",
						"          no2,",
						"          o3,",
						"          pm10,",
						"          pm2_5,",
						"          so2,",
						"          aqi,",
						"          Location,",
						"          id,",
						"          date_time",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> drop",
						"flatten filter(lat == 29.7601) ~> filter1",
						"drop sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['HistoricalAirPollutionHouston.parquet'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> HistoricalAirPollutionSilver"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AirSinkBronze')]",
				"[concat(variables('factoryId'), '/datasets/AirSinkSilver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PreProcessRespiratorySilverBoston')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Respiratory Hospitalization cleanup to silver layer",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "RespiratorySinkBronze",
								"type": "DatasetReference"
							},
							"name": "RespiratoryHospitalizationSilver"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "RespiratorySinkSilver",
								"type": "DatasetReference"
							},
							"name": "RespiratorySink"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn"
						},
						{
							"name": "filter"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          week_end as string,",
						"          geography as string,",
						"          county as string,",
						"          percent_visits_combined as string,",
						"          percent_visits_covid as string,",
						"          percent_visits_influenza as string,",
						"          percent_visits_rsv as string,",
						"          percent_visits_smoothed_combined as string,",
						"          percent_visits_smoothed_covid as string,",
						"          percent_visits_smoothed_influenza as string,",
						"          percent_visits_smoothed_rsv as string,",
						"          ed_trends_covid as string,",
						"          ed_trends_influenza as string,",
						"          ed_trends_rsv as string,",
						"          hsa as string,",
						"          hsa_counties as string,",
						"          hsa_nci_id as string,",
						"          fips as string,",
						"          trend_source as string,",
						"          BuildNumber as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine',",
						"     wildcardPaths:['Bronze/RespiratoryHospitalizations/Respiratory_Hospitalizations_2years.json'],",
						"     partitionBy('hash', 1)) ~> RespiratoryHospitalizationSilver",
						"filter derive(percent_visits_combined = toInteger(round(toDouble(percent_visits_combined) * 775000)),",
						"          total_visits_covid = toInteger(round(toDouble(percent_visits_covid) * 775000)),",
						"          total_visits_influenza = toInteger(round(toDouble(percent_visits_influenza) * 775000)),",
						"          total_visits_rsv = toInteger(round(toDouble(percent_visits_rsv) * 775000)),",
						"          Location = 'Boston',",
						"          total_visits_smoothed_combined = toInteger(round(toDouble(percent_visits_smoothed_combined) * 775000)),",
						"          total_visits_smoothed_covid = toInteger(round(toDouble(percent_visits_smoothed_covid) * 775000)),",
						"          total_visits_smoothed_influenza = toInteger(round(toDouble(percent_visits_smoothed_influenza) * 775000)),",
						"          total_visits_smoothed_rsv = toInteger(round(toDouble(percent_visits_smoothed_rsv) * 775000))) ~> derivedColumn",
						"RespiratoryHospitalizationSilver filter(geography == \"Massachusetts\" && county == \"Suffolk\") ~> filter",
						"derivedColumn select(mapColumn(",
						"          Location,",
						"          ed_trends_covid,",
						"          ed_trends_influenza,",
						"          ed_trends_rsv,",
						"          week_end,",
						"          total_visits_covid,",
						"          total_visits_influenza,",
						"          total_visits_rsv,",
						"          total_visits_smoothed_combined,",
						"          total_visits_smoothed_covid,",
						"          total_visits_smoothed_influenza,",
						"          total_visits_smoothed_rsv",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['RespiratoryHospitalizationsFilteredBoston'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> RespiratorySink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RespiratorySinkBronze')]",
				"[concat(variables('factoryId'), '/datasets/RespiratorySinkSilver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PreProcessRespiratorySilverHouston')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Respiratory Hospitalization cleanup to silver layer",
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "RespiratorySinkBronze",
								"type": "DatasetReference"
							},
							"name": "RespiratoryHospitalizationSilver"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "RespiratorySinkSilver",
								"type": "DatasetReference"
							},
							"name": "RespiratorySink"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn"
						},
						{
							"name": "filter"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          week_end as string,",
						"          geography as string,",
						"          county as string,",
						"          percent_visits_combined as string,",
						"          percent_visits_covid as string,",
						"          percent_visits_influenza as string,",
						"          percent_visits_rsv as string,",
						"          percent_visits_smoothed_combined as string,",
						"          percent_visits_smoothed_covid as string,",
						"          percent_visits_smoothed_influenza as string,",
						"          percent_visits_smoothed_rsv as string,",
						"          ed_trends_covid as string,",
						"          ed_trends_influenza as string,",
						"          ed_trends_rsv as string,",
						"          hsa as string,",
						"          hsa_counties as string,",
						"          hsa_nci_id as string,",
						"          fips as string,",
						"          trend_source as string,",
						"          BuildNumber as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'documentPerLine',",
						"     wildcardPaths:['Bronze/RespiratoryHospitalizations/Respiratory_Hospitalizations_2years.json'],",
						"     partitionBy('hash', 1)) ~> RespiratoryHospitalizationSilver",
						"filter derive(percent_visits_combined = toInteger(round(toDouble(percent_visits_combined) * 50009302)),",
						"          total_visits_covid = toInteger(round(toDouble(percent_visits_covid) * 50009302)),",
						"          total_visits_influenza = toInteger(round(toDouble(percent_visits_influenza) * 50009302)),",
						"          total_visits_rsv = toInteger(round(toDouble(percent_visits_rsv) * 50009302)),",
						"          total_visits_smoothed_combined = toInteger(round(toDouble(percent_visits_smoothed_combined) * 50009302)),",
						"          total_visits_smoothed_covid = toInteger(round(toDouble(percent_visits_smoothed_covid) * 50009302)),",
						"          total_visits_smoothed_influenza = toInteger(round(toDouble(percent_visits_smoothed_influenza) * 50009302)),",
						"          total_visits_smoothed_rsv = toInteger(round(toDouble(percent_visits_smoothed_rsv) * 50009302)),",
						"          Location = 'Houston') ~> derivedColumn",
						"RespiratoryHospitalizationSilver filter(geography == \"Texas\" && county == \"Harris\") ~> filter",
						"derivedColumn select(mapColumn(",
						"          week_end,",
						"          ed_trends_covid,",
						"          ed_trends_influenza,",
						"          ed_trends_rsv,",
						"          total_visits_covid,",
						"          total_visits_influenza,",
						"          total_visits_rsv,",
						"          total_visits_smoothed_combined,",
						"          total_visits_smoothed_covid,",
						"          total_visits_smoothed_influenza,",
						"          total_visits_smoothed_rsv,",
						"          Location",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['RespiratoryHospitalizationsFilteredHouston'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> RespiratorySink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RespiratorySinkBronze')]",
				"[concat(variables('factoryId'), '/datasets/RespiratorySinkSilver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PreprocessRawRespiratoryDataBronze')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "RawHospData",
								"type": "DatasetReference"
							},
							"name": "RespiratoryHospitalizations"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "RespiratorySinkBronze",
								"type": "DatasetReference"
							},
							"name": "RespiratoryHospitalization2years"
						}
					],
					"transformations": [
						{
							"name": "Datafor2years"
						},
						{
							"name": "FilterDataFor2years"
						}
					],
					"scriptLines": [
						"source(output(",
						"          week_end as string,",
						"          geography as string,",
						"          county as string,",
						"          percent_visits_combined as string,",
						"          percent_visits_covid as string,",
						"          percent_visits_influenza as string,",
						"          percent_visits_rsv as string,",
						"          percent_visits_smoothed_combined as string,",
						"          percent_visits_smoothed_covid as string,",
						"          percent_visits_smoothed_influenza as string,",
						"          percent_visits_smoothed_rsv as string,",
						"          ed_trends_covid as string,",
						"          ed_trends_influenza as string,",
						"          ed_trends_rsv as string,",
						"          hsa as string,",
						"          hsa_counties as string,",
						"          hsa_nci_id as string,",
						"          fips as string,",
						"          trend_source as string,",
						"          BuildNumber as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> RespiratoryHospitalizations",
						"RespiratoryHospitalizations derive(week_end = toDate(week_end, 'yyyy-MM-dd')) ~> Datafor2years",
						"Datafor2years filter(week_end >= toDate('2023-02-01') && week_end <= toDate('2025-03-31')) ~> FilterDataFor2years",
						"FilterDataFor2years sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          week_end as string,",
						"          geography as string,",
						"          county as string,",
						"          percent_visits_combined as string,",
						"          percent_visits_covid as string,",
						"          percent_visits_influenza as string,",
						"          percent_visits_rsv as string,",
						"          percent_visits_smoothed_combined as string,",
						"          percent_visits_smoothed_covid as string,",
						"          percent_visits_smoothed_influenza as string,",
						"          percent_visits_smoothed_rsv as string,",
						"          ed_trends_covid as string,",
						"          ed_trends_influenza as string,",
						"          ed_trends_rsv as string,",
						"          hsa as string,",
						"          hsa_counties as string,",
						"          hsa_nci_id as string,",
						"          fips as string,",
						"          trend_source as string,",
						"          BuildNumber as string",
						"     ),",
						"     partitionFileNames:['Respiratory_Hospitalizations_2years'],",
						"     truncate: true,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> RespiratoryHospitalization2years"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RawHospData')]",
				"[concat(variables('factoryId'), '/datasets/RespiratorySinkBronze')]"
			]
		}
	]
}