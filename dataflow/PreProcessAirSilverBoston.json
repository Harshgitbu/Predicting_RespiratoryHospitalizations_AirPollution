{
	"name": "PreProcessAirPollutionSilverBoston",
	"properties": {
		"description": "getting data ready for silver for airpollution",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "HistoricalAirPollutionDataSink",
						"type": "DatasetReference"
					},
					"name": "AirPollutionSilver"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AirPollutionSilverstorage",
						"type": "DatasetReference"
					},
					"name": "HistoricalAirPollutionSilver"
				}
			],
			"transformations": [
				{
					"name": "flatten"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "drop"
				},
				{
					"name": "filter1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          coord as (lat as double, lon as double),",
				"          list as (components as (co as double, nh3 as double, no as double, no2 as double, o3 as double, pm10 as double, pm2_5 as double, so2 as double), dt as integer, main as (aqi as short))[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine',",
				"     wildcardPaths:['Bronze/HistoricalAirPollution/2.5/air_pollution/history*'],",
				"     partitionBy('hash', 1)) ~> AirPollutionSilver",
				"AirPollutionSilver foldDown(unroll(list, list),",
				"     mapColumn(",
				"          lat = coord.lat,",
				"          lon = coord.lon,",
				"          co = list.components.co,",
				"          nh3 = list.components.nh3,",
				"          no = list.components.no,",
				"          no2 = list.components.no2,",
				"          o3 = list.components.o3,",
				"          pm10 = list.components.pm10,",
				"          pm2_5 = list.components.pm2_5,",
				"          so2 = list.components.so2,",
				"          timestamp = list.dt,",
				"          aqi = list.main.aqi",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten",
				"filter1 derive(Location = 'Boston',",
				"          id = concat('Boston', toString(timestamp)),",
				"          co = toString(round(co, 2), '0.00'),",
				"          nh3 = toString(round(nh3, 2), '0.00'),",
				"          no = toString(round(no, 2), '0.00'),",
				"          no2 = toString(round(no2, 2), '0.00'),",
				"          o3 = toString(round(o3, 2), '0.00'),",
				"          pm10 = toString(round(pm10, 2), '0.00'),",
				"          pm2_5 = toString(round(pm2_5, 2), '0.00'),",
				"          so2 = toString(round(so2, 2), '0.00'),",
				"          date_time = toTimestamp(toLong(timestamp) * 1000L)) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          co,",
				"          nh3,",
				"          no,",
				"          no2,",
				"          o3,",
				"          pm10,",
				"          pm2_5,",
				"          so2,",
				"          aqi,",
				"          Location,",
				"          id,",
				"          date_time",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> drop",
				"flatten filter(lat == 42.3601) ~> filter1",
				"drop sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:['HistoricalAirPollution.parquet'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> HistoricalAirPollutionSilver"
			]
		}
	}
}