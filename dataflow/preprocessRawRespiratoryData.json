{
	"name": "preprocessRawRespiratoryData",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "RawData",
						"type": "DatasetReference"
					},
					"name": "RespiratoryHospitalizations"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "respiratoryhospitalization",
						"type": "DatasetReference"
					},
					"name": "RespiratoryHospitalization1year"
				}
			],
			"transformations": [
				{
					"name": "Datafor1year"
				},
				{
					"name": "FilterDataFor1year"
				},
				{
					"name": "select1"
				},
				{
					"name": "filter1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          week_end as string,",
				"          geography as string,",
				"          county as string,",
				"          percent_visits_combined as string,",
				"          percent_visits_covid as string,",
				"          percent_visits_influenza as string,",
				"          percent_visits_rsv as string,",
				"          percent_visits_smoothed_combined as string,",
				"          percent_visits_smoothed_covid as string,",
				"          percent_visits_smoothed_influenza as string,",
				"          percent_visits_smoothed_rsv as string,",
				"          ed_trends_covid as string,",
				"          ed_trends_influenza as string,",
				"          ed_trends_rsv as string,",
				"          hsa as string,",
				"          hsa_counties as string,",
				"          hsa_nci_id as string,",
				"          fips as string,",
				"          trend_source as string,",
				"          BuildNumber as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> RespiratoryHospitalizations",
				"RespiratoryHospitalizations derive(week_end = toDate(week_end, 'yyyy-MM-dd'),",
				"          total_visits_combined = toDouble(percent_visits_combined) * 768425,",
				"          total_visits_covid = toDouble(percent_visits_covid) * 768425,",
				"          total_visits_influenza = toDouble(percent_visits_influenza) * 768425,",
				"          total_visits_rsv = toDouble(percent_visits_rsv) * 768425) ~> Datafor1year",
				"Datafor1year filter(week_end >= toDate('2023-02-01') && week_end <= toDate('2025-03-31')) ~> FilterDataFor1year",
				"filter1 select(mapColumn(",
				"          week_end,",
				"          {\"Boston\"} = geography,",
				"          {\"Suffolk\"} = county,",
				"          total_visits_combined,",
				"          total_visits_covid,",
				"          total_visits_influenza,",
				"          total_visits_rsv",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"FilterDataFor1year filter(geography == \"Boston\" && county == \"Suffolk\") ~> filter1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Respiratory_Hospitalizations_1year'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> RespiratoryHospitalization1year"
			]
		}
	}
}